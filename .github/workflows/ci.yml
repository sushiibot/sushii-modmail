name: CI

on:
  push:
    # Ignore pushes that only change documentation
    paths-ignore:
      - "docs/**"
      - "README.md"
  pull_request:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install

      - name: Run tests
        run: bun test

  docker-build:
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    outputs:
      sha_short: ${{ steps.sha.outputs.sha_short }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Get short SHA
        id: sha
        run: |
          echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          platforms: linux/amd64,linux/arm64
          push: true
          build-args: |
            GIT_HASH=${{ steps.sha.outputs.sha_short }}
            BUILD_DATE=${{ github.event.head_commit.timestamp }}
          tags: |
            ghcr.io/sushiibot/modmail:latest
            ghcr.io/sushiibot/modmail:${{ steps.sha.outputs.sha_short }}
          cache-from: type=registry,ref=ghcr.io/sushiibot/modmail:buildcache
          cache-to: type=registry,ref=ghcr.io/sushiibot/modmail:buildcache,mode=max

  deploy-staging:
    needs: docker-build
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout deployment playbook
        uses: actions/checkout@v4
        with:
          repository: sushiibot/sushii-ansible
          ref: main
          token: ${{ secrets.ANSIBLE_REPO_TOKEN }}

      - name: Setup SSH key
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Setup known host
        run: |
          mkdir -p ~/.ssh
          echo "$KNOWN_HOST" > ~/.ssh/known_hosts
        env:
          KNOWN_HOST: ${{ secrets.KNOWN_HOST }}

      - name: Deploy to staging
        env:
          ANSIBLE_VAULT_PASSWORD: ${{ secrets.ANSIBLE_VAULT_PASSWORD }}
        run: |

          # Remove unused vault file
          rm ./inventory/group_vars/all/vault.yml

          # Only run deploy tag, docker_image_check_version is directly set
          ansible-playbook \
            -i inventory/hosts.yml \
            --vault-password-file ./vault-env \
            playbooks/deploy.yml \
            -e "target_host=sushii" \
            -e "service=sushii-modmail-staging" \
            -e "docker_image_check_version=${{ needs.docker-build.outputs.sha_short }}" \
            -e "docker_registry_password=${{ secrets.GITHUB_TOKEN }}" \
            -e "docker_registry_user=${{ github.repository_owner }}" \
            -t deploy
